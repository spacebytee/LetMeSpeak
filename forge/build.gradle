buildscript {
    repositories {
        maven { url "https://maven.minecraftforge.net" }
        maven { url 'https://repo.spongepowered.org/maven'}
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.0.+'
        classpath 'org.spongepowered:mixingradle:0.7.+'
    }
}

plugins {
    id "java"
    id "com.github.johnrengelman.shadow" version "2.0.4"
}

apply plugin: "net.minecraftforge.gradle"
apply plugin: 'org.spongepowered.mixin'
apply plugin: 'maven-publish'

//TODO: Change the version, group, and archivesBaseName to your own.
version = "1.0" // The version number of your mod.
group = "com.bytespacegames.letmespeak" // This is the group of the mod (usually domain or your name -> at.manuthebyte)
archivesBaseName = "letmespeak" // This is the name of the jar that is generated.

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8'
compileJava.options.encoding = "UTF-8" // Make sure that the encoding is set to UTF-8, so we have no encoding issues.

minecraft {
    mappings channel: 'snapshot', version: '20200723-1.16.1'
    runs {
        client {
            workingDirectory project.file('run')

            mods {
                letmespeak {
                    source sourceSets.main
                }
            }
        }
    }
}

// This is the configuration for the shadow plugin, which is used to add libraries to the jar.
configurations {
    shade
    compile.extendsFrom(shade)
}

// Configures the SpongePowered Repository
repositories {
    maven { url 'https://repo.spongepowered.org/maven/' }
}

def systemOs = System.getProperty("os.name").toLowerCase(Locale.ENGLISH)

/**
 * This is where we bundle mixins into the jar.
 * shade -> bundles the library into the jar
 * compile -> library only available at compile time (not accessible at runtime)
 */
dependencies {
    minecraft 'net.minecraftforge:forge:1.16.1-32.0.63'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
    implementation project(':common')
    shade('org.spongepowered:mixin:0.7.10-SNAPSHOT') {
        exclude module: 'launchwrapper'
        exclude module: 'guava'
        exclude module: 'gson'
        exclude module: 'commons-io'
        exclude module: 'log4j-core'
    }
}

mixin {
    // MixinGradle Settings
    add sourceSets.main, 'mixins.letmespeak.refmap.json'
    config 'mixins.letmespeak.json'
}

// This is the configuration for the shadow plugin, which is used to add libraries to the jar.
shadowJar {
    dependencies {}
    configurations = [project.configurations.shade] // Adds the gradle configuration "shade" so we can use it.
    duplicatesStrategy DuplicatesStrategy.EXCLUDE // Prevents duplicates
    from(project(':common').sourceSets.main.output)
    archiveClassifier.set("")
}
jar.finalizedBy('reobfJar')
/**
 * Adds the manifest values
 * FMLCorePlugin -> Put the Mixin Loader here
 * ModSide -> Client or Server
 * TweakClass -> Mixin tweaker
 * MixinConfigs -> Put your mixin config here (mixins.MODID.json)
 */
//TODO: Change the FMLCorePlugin to the mixin loader with your own package
//TODO: Add your own MixinConfig(s)
jar {
    manifest.attributes(
        "Specification-Title": "letmespeak",
        "Implementation-Title": "letmespeak",
        "Specification-Version": "1",
        "ForceLoadAsMod": true,
        "TweakOrder": 0,
        "ModSide": "CLIENT",
        'TweakClass': 'org.spongepowered.asm.launch.MixinTweaker',
        'MixinConfigs': 'mixins.letmespeak.json'
    )
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}
sourceSets {
    main {
        ext.refMap = "mixins.letmespeak.refmap.json"
    }
}
tasks.named('jar') {
    from(project(':common').sourceSets.main.output)
}